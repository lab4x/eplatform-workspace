---

# https://www.redhat.com/sysadmin/chrony-time-services-linux
# https://www.golinuxcloud.com/configure-chrony-ntp-server-client-force-sync/
# https://benjr.tw/102661
- name: config
  vars:
    run_wsl: |
      ansible-playbook \
        --ask-become-pass \
        --inventory $PWD/ansible \
        $PWD/../../../linux/any-config/ntp/chronyd/ansible-playbook.config.yml
  hosts: linux
  become: true
  tasks: 

    - name: install chrony
      become: true
      ansible.builtin.package:
        name: chrony
        state: present
      register: package_result
      until: "package_result is not failed"
      retries: 3
      delay: 5

    - name: start chronyd
      ansible.builtin.service:
        name: "chronyd"
        enabled: true
        state: started

    - name: config ntp synchronization
      ansible.builtin.shell: timedatectl set-ntp true

    - when: chronyd.conf is defined
      block:

      - name: lineinfile replace chronyd conf
        loop: "{{ chronyd.conf.lineinfile | default([]) | list }}"
        vars:
          _default: 
            path: /etc/chrony.conf
            backup: true
            create: true
          _lineinfile: "{{ item | combine(_default, recursive=True) }}"
        ansible.builtin.lineinfile: "{{ _lineinfile }}"

      - name: copy replace chronyd conf
        loop: "{{ chronyd.conf.cp | default([]) | list }}"
        vars:
          _default: 
            dest: /etc/chrony.conf
            backup: true
          _copy: "{{ item | combine(_default, recursive=True) }}"
        ansible.builtin.copy: "{{ _copy }}"

      - name: restart chronyd
        ansible.builtin.service:
          name: "chronyd"
          enabled: true
          state: restarted

    - name: sync time
      ansible.builtin.shell: "chronyc -a makestep"

    - block:

      - name: run chronyc sources
        ansible.builtin.shell: "chronyc sources"
        register: sources_cmd

      - name: print chronyc sources
        ansible.builtin.pause:
          seconds: 1
          prompt: |
            //////////////////////////////////////////////////

            {{ sources_cmd.stdout }}
            //////////////////////////////////////////////////
